% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Scores.R, R/ConditionalPower.R,
%   R/ConditionalSampleSize.R
\docType{methods}
\name{evaluate}
\alias{evaluate}
\alias{evaluate,IntegralScore,TwoStageDesign-method}
\alias{evaluate,ConditionalPower,TwoStageDesign-method}
\alias{evaluate,ConditionalSampleSize,TwoStageDesign-method}
\title{Evaluation of a score}
\usage{
evaluate(s, design, ...)

\S4method{evaluate}{IntegralScore,TwoStageDesign}(s, design,
  optimization = FALSE, subdivisions = 10000L, ...)

\S4method{evaluate}{ConditionalPower,TwoStageDesign}(s, design, x1,
  optimization = FALSE, ...)

\S4method{evaluate}{ConditionalSampleSize,TwoStageDesign}(s, design, x1,
  optimization = FALSE, ...)
}
\arguments{
\item{s}{score}

\item{design}{\code{TwoStageDesign} object}

\item{...}{further optional arguments}

\item{optimization}{logical, if \code{TRUE} uses a relaxation to real
parameters of the underlying design; used for smooth optimization.}

\item{subdivisions}{integer, number of subdivisions that is used for integration
on the continuation region; results become more precise with increased
number of subdivisions; default is \code{10000L}.}

\item{x1}{stage-one test statistic}
}
\description{
Both \code{\link{ConditionalScore}} as well as
\code{\link{IntegralScore}} implement \code{evaluate} methods
which handle the actual computation of the score given a design and
(for conditional scores) an interim result.
Conditional scores additionally implement an \code{expected} method
to obtain the corresponding unconditional \code{\link{IntegralScore}}.
}
\examples{
design <- TwoStageDesign(50, .0, 2.0, 50, 2.0) # dummy design
 evaluate(
    ConditionalPower(Normal(), PointMassPrior(.3, 1)),
    design,
    x1 = 1
 )

design <- TwoStageDesign(50, .0, 2.0, 50, 2.0) # dummy design
 evaluate(
    ConditionalSampleSize(Normal(), PointMassPrior(.3, 1)),
    design,
    x1 = 3
 ) # 50

}
